/*You are required to complete this method*/
 int max_path_sum(int A[], int B[], int l1, int l2)
{
	int sum1 = 0, sum2 = 0;

	if (l1 == 0 && l2 != 0) {
		int i = l2;
		int sum = 0;
		while (i != 0) {
			sum += B[i--];
		}
		return sum;
	}
	else if (l1 != 0 && l2 == 0) {
		int i = l1;
		int sum = 0;
		while (i != 0) {
			sum += A[i--];
		}
		return sum;
	}
	else if (l1 == 0 && l2 == 0) {
		return 0;
	}
	else {
		for (int i = 0; i<min(l1, l2); i++) {
			if (A[i] != B[i]) {
				sum1 += A[i];
				sum2 += B[i];
			}
			else {
				sum1<sum2 || sum1 == sum2 ? sum1 = sum2+A[i] : sum2 = sum1+A[i];
			}
		}
		if (l1 != l2) {
			if (l1 > l2) {
				int sum = sum1;
				int i = l2;
				while (i != l1) {
					sum += A[i];
					i++;
				}
				return sum;
			}
			if (l1 < l2) {
				int sum = sum2;
				int i = l1;
				while (i != l2) {
					sum += B[i];
					i++;
				}
				return sum;
			}
		}
		else {
			return max(sum1, sum2);
		}
	}
}
