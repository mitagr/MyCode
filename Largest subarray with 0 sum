/*You are required to complete this function*/
int maxLen(int A[],int n)
{
  unordered_map<int, int> mymap;
  int l = n;
  int max_len = 0;
  int sum;
  for(int i=0; i<l; i++){
    sum += A[i];
    if(sum==0){
        max_len = i+1;
    }
    if(A[i] == 0 && max_len == 0){
        max_len = 1;
    }
    unordered_map<int, int>::iterator itr = mymap.find(sum);
    if(itr != mymap.end()){
        max_len = max(max_len, i-itr->second);
    }
    else{
        mymap.insert({sum,i});
    }
  }
  return max_len;
}
