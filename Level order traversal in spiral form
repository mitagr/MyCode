/* A binary tree node has data, pointer to left child
   and a pointer to right child  
struct Node
{
    int data;
    Node* left;
    Node* right;
}; */


void printSpiral(Node *root)
{
     if(root == NULL){
         return;
     }
     stack<Node*> s1;
     stack<Node*> s2;
     s1.push(root);
     while(!s1.empty() || !s2.empty()){
         Node* n = new Node();
         n = s1.top();
         cout<<n->data<<" ";
         s1.pop();
         if(n->right!= NULL){
             s2.push(n->right);
         }
         if(n->left != NULL){
             s2.push(n->left);
         }
         while(!s2.empty()){
            Node* n = new Node();
            n = s2.top();
            cout<<n->data<<" ";
            s2.pop();
         if(n->left!= NULL){
             s1.push(n->left);
         }
         if(n->right != NULL){
             s1.push(n->right);
         }
         }
     }
}
